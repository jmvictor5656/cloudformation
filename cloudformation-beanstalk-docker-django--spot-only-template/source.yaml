AWSTemplateFormatVersion: '2010-09-09' 
Description: "Template for beanstalk service to deploy a sample django using only spot instances as default"
Parameters:
  InstanceTypeParameter:
    Type: String
    Default: t3.small
    AllowedValues:
      - "t3.small"
    Description: "Enter instance type"
  # Min instance for load balance
  MinInstanceParameter:
    Type: Number
    Default: 1
    MinValue: 1
    MaxValue: 3
  # Max instances for a load
  MaxInstanceParameter:
    Type: Number
    Default: 1
    Description: "What should be the maximum number of instances for loadbalancer"
    MinValue: 1
    MaxValue: 3
  EnableSpotParameter:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
    Description: "Should there be spot instances while autoscaling"
  
  SpotFleetOnDemandBaseParameter:
    Type: Number
    Default: 0
    Description: "What should be minimum ondemand instances while autoscaling"
    MinValue: 0
    MaxValue: 3
  
  SpotFleetOnDemandAboveBasePercentageParameter:
    Type: Number
    Default: 0
    Description: "Percentage of OnDemand instances while autoscaling"
    MinValue: 0
    MaxValue: 100

  SpotMaxPriceParameter:
    Type: Number
    Default: 0.01
    Description: "Maximum dollars you are ready to pay for an ec2 instance"
    MinValue: 0
    MaxValue: 19

  SourceBucketParameter:
    Type: String
    Description: "Bucker name where source file is present example: abc"
  
  SourceKeyParameter:
    Type: String
    Description: "Full path of the file in s3 where file is present excluding bucket name"
    Default: "Dockerrun.aws.json"
 

Resources:
  sampleApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      Description: AWS Elastic Beanstalk Sample Application
  sampleApplicationVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName:
        Ref: sampleApplication
      Description: AWS ElasticBeanstalk Sample Application Version
      SourceBundle:
        S3Bucket: !Ref SourceBucketParameter
        S3Key: !Ref SourceKeyParameter
  sampleConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName:
        Ref: sampleApplication
      Description: AWS ElasticBeanstalk Sample Configuration Template
      OptionSettings:
      - Namespace: aws:autoscaling:asg
        OptionName: MinSize
        Value: !Ref MinInstanceParameter
      - Namespace: aws:autoscaling:asg
        OptionName: MaxSize
        Value: !Ref MaxInstanceParameter
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: EnvironmentType
        Value: LoadBalanced
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: IamInstanceProfile
        Value: !Ref MyInstanceProfile
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: InstanceType
        Value: !Ref InstanceTypeParameter
      - Namespace: aws:ec2:instances
        OptionName: EnableSpot
        Value: !Ref EnableSpotParameter
      - Namespace: aws:ec2:instances
        OptionName: SpotFleetOnDemandBase
        Value: !Ref SpotFleetOnDemandBaseParameter
      - Namespace: aws:ec2:instances
        OptionName: SpotFleetOnDemandAboveBasePercentage
        Value: !Ref SpotFleetOnDemandAboveBasePercentageParameter
      - Namespace: aws:ec2:instances
        OptionName: SpotMaxPrice
        Value: !Ref SpotMaxPriceParameter
      SolutionStackName: "64bit Amazon Linux 2 v3.2.4 running Docker"
  sampleEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName:
        Ref: sampleApplication
      Description: AWS ElasticBeanstalk Sample Environment
      TemplateName:
        Ref: sampleConfigurationTemplate
      VersionLabel:
        Ref: sampleApplicationVersion
  MyInstanceRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:                   
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: Beanstalk EC2 role
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier
  MyInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles: 
        - !Ref MyInstanceRole
